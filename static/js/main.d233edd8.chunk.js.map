{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendsList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatarUrl","followersCount","viewsCount","likesCount","className","s","profile","description","src","alt","avatar","stats","statsItem","label","quantity","Statistics","title","statistics","statList","map","min","max","percentage","id","item","style","backgroundColor","Math","random","FriendList","friends","isOnline","FriendsListItem","Online","Offline","Avatar","width","Name","TransactionHistory","items","type","amount","currency","align","App","user","followers","views","likes","statisticalData","transactions","reactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d233edd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__DVMu0\",\"description\":\"Profile_description__2QjaP\",\"avatar\":\"Profile_avatar__2zRv-\",\"stats\":\"Profile_stats__2Z-YA\",\"statsItem\":\"Profile_statsItem__esxOT\",\"name\":\"Profile_name__trnKW\",\"quantity\":\"Profile_quantity__339Bf\",\"tag\":\"Profile_tag__zMoZ7\",\"location\":\"Profile_location__3o1_O\",\"label\":\"Profile_label__1-74m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__DjHHe\",\"title\":\"Statistics_title__3R_0s\",\"percentage\":\"Statistics_percentage__B-WSB\",\"statList\":\"Statistics_statList__1JP9M\",\"item\":\"Statistics_item__2ZDEs\",\"label\":\"Statistics_label__2a3jN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"FriendsList_FriendList__1Z-x0\",\"FriendsListItem\":\"FriendsList_FriendsListItem__1KR82\",\"Online\":\"FriendsList_Online__3tA8-\",\"Offline\":\"FriendsList_Offline__2GfMJ\",\"Avatar\":\"FriendsList_Avatar__ZkiBf\",\"Name\":\"FriendsList_Name__1GGHC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__Ed8lY\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\n\r\nconst Profile = ({ name , tag , location , avatarUrl, followersCount , viewsCount , likesCount}) => {\r\n \r\n  return(<div className={s.profile}>\r\n    <div className={s.description}>\r\n    <img\r\n      src={avatarUrl}\r\n      alt=\"Аватар пользователя\"\r\n      className={s.avatar}\r\n    />\r\n    <p className={s.name}>{name}</p>\r\n    <p className={s.tag}>@{tag}</p>\r\n    <p className={s.location}>{location}</p>\r\n  </div>\r\n\r\n  <ul className={s.stats}> \r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Followers</span>\r\n      <span className={s.quantity}>{followersCount}</span>\r\n    </li>\r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Views</span>\r\n      <span className={s.quantity}>{viewsCount}</span>\r\n    </li>\r\n    <li className={s.statsItem}>\r\n      <span className={s.label}>Likes</span>\r\n      <span className={s.quantity}>{likesCount}</span>\r\n    </li>\r\n  </ul>\r\n</div>)\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatarUrl: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  followersCount: PropTypes.number.isRequired,\r\n  viewsCount: PropTypes.number.isRequired,\r\n  likesCount: PropTypes.number.isRequired,\r\n  \r\n};\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst generateItemColor = (min, max) => {\r\n  const itemColor = `rgb(\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min}\r\n  )`;\r\n\r\n  return itemColor;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst Statistics = ({title,stats}) => {\r\n    return<section className={s.statistics}>\r\n  <h2 className={s.title}>{title}</h2>\r\n\r\n  <ul className={s.statList}>\r\n        {stats.map(({ label, percentage, id }) => <li className={s.item} key={id}  style={{backgroundColor:generateItemColor(0, 255)}}>\r\n      <span className={s.label}>{label}</span>\r\n      <span className={s.percentage}>{percentage}%</span>\r\n    </li>)}\r\n  </ul>\r\n</section>\r\n };\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }),\r\n  ),\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired\r\n    }),\r\n  ),\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      percentage: PropTypes.number.isRequired\r\n    }),\r\n  ),\r\n\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendsList.module.css';\r\n\r\nconst FriendList = ({friends}) => {\r\n\r\n    return <ul className={s.FriendList}>\r\n    \r\n        {friends.map(({avatar, name, isOnline, id}) => <li className={s.FriendsListItem} key ={id}>\r\n  <span className={isOnline ? s.Online : s.Offline }></span>\r\n  <img className={s.Avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.Name}>{name}</p>\r\n</li>)}\r\n    \r\n</ul>\r\n};\r\n \r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired\r\n        }),\r\n    ),\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired\r\n        }),\r\n    ),\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired\r\n        }),\r\n    ),\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            isOnline: PropTypes.bool.isRequired\r\n        }),\r\n    ),\r\n};\r\n\r\nexport default FriendList;","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css'\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return <table className={s.TransactionHistory}>\r\n  <thead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </thead>\r\n\r\n        <tbody>     \r\n            \r\n    {items.map(({id,type, amount, currency}) =><tr key ={id}>\r\n      <td>{type}</td>\r\n      <td align='center'>{amount}</td>\r\n      <td align='center'>{currency}</td>\r\n    </tr>)}\r\n    \r\n        </tbody>\r\n        \r\n</table>\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    })),\r\n  \r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n      type: PropTypes.string.isRequired\r\n  })),\r\n  \r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      amount: PropTypes.string.isRequired\r\n    }),\r\n  ),\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      currency: PropTypes.string.isRequired\r\n    }),\r\n  ),\r\n  \r\n};\r\n\r\nexport default TransactionHistory;","import Profile from './components/Profile/Profile.jsx';\r\nimport user from './components/Profile/user.json';\r\nimport Statistics from './components/Statistics/Statistics.jsx';\r\nimport statisticalData from './components/Statistics/statistical-data.json';\r\nimport FriendList from './components/FriendList/FriendList.jsx';\r\nimport friends from './components/FriendList/friends.json';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory.jsx';\r\nimport transactions from './components/TransactionHistory/transactions.json';\r\n\r\nconst App = () => {\r\n    return <div>\r\n  <Profile\r\n  name={user.name}\r\n  tag={user.tag}\r\n  location={user.location}\r\n  avatarUrl={user.avatar}\r\n  followersCount={user.stats.followers}\r\n  viewsCount={user.stats.views} \r\n  likesCount={user.stats.likes}\r\n        />\r\n        \r\n  <Statistics\r\n        title=\"Upload stats\"\r\n        stats={statisticalData} />\r\n    \r\n  <FriendList friends={friends} />\r\n\r\n  <TransactionHistory items={transactions} />     \r\n\r\n        \r\n    </div>\r\n\r\n    \r\n};\r\n\r\n\r\n \r\nexport default App;","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\n\r\n\r\n\r\nreactDom.render(<React.StrictMode>\r\n  <App />\r\n</React.StrictMode>, document.getElementById('root'));\r\n\r\n\r\n\r\n"],"sourceRoot":""}